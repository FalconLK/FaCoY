public void solve() throws Exception {
		int N = iread();
		long p = iread(), q = iread(), r = iread(), s = iread();
		long[] a = new long[N];
		for (int i = 0; i < N; i++)
			a[i] = ((i * p + q) % r + s);
		long[] A = new long[N + 1];
		for (int i = 0; i < N; i++)
			A[i + 1] = A[i] + a[i];
		int j = 0;
		long ans = A[N];
		for (int i = 0; i < N; i++) {
			long third = A[N] - A[i + 1];
			while (j < i && A[i + 1] - A[j + 2] > A[j + 2])
				j++;
			{
				long first = A[j + 1];
				long second = A[i + 1] - A[j + 1];
				ans = Math.min(ans, Math.max(first, Math.max(second, third)));
			}
			if (j < i) {
				long first = A[j + 2];
				long second = A[i + 1] - A[j + 2];
				ans = Math.min(ans, Math.max(first, Math.max(second, third)));
			}
		}
		double res = (A[N] - ans) * 1.0 / A[N];
		out.write(df.format(res));
	}