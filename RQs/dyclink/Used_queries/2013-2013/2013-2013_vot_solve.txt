private void solve() throws Exception {
		b = nextLong();
		n = nextInt();
		x = new long[37];
		for (int i = 0; i < n; ++i) {
			x[i] = nextLong();
		}
		Arrays.sort(x);
		double best = 0;
		long sum = 0;
		for (int count = 1; count < x.length; ++count) {
			best = Math.max(best, getExp(count, x[count]));
			best = Math.max(best, getExp(count, x[count] - 1));
			sum += x[count - 1];
			long toGet = x[count - 1] * count - sum;
			if (toGet <= b) {
				best = Math.max(best, getExp(count, x[count - 1] + (b - toGet) / count));
			}
		}
		//out.println(best);
		for (int count = 1; count < x.length; ++count) {
			for (int count2 = 1; count + count2 < x.length; ++count2) {
				long to = x[count + count2 - 1];
				long sum1 = 0, sum2 = 0;
				for (int i = 0; i < count + count2; ++i) {
					if (i < count) {
						sum1 += x[i];
					} else {
						sum2 += x[i];
					}
				}
				long toGet = (to - 1) * count - sum1;
				toGet += to * count2 - sum2;
				if (toGet > b) {
					continue;
				}
				best = Math.max(best, getExp2(count, count2, to));
				best = Math.max(best, getExp2(count, count2, x[count + count2]));
				best = Math.max(best, getExp2(count, count2, to + (b - toGet) / (count + count2)));
			}
		}
		out.printf("%.12f\n", best);
	}