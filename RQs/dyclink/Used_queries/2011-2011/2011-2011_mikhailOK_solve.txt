private void solve() throws IOException {
		int w = nextInt();
		int l = nextInt();
		int u = nextInt();
		int guests = nextInt();
		Point[] low = new Point[l];
		for (int i = 0; i < l; i++) {
			low[i] = new Point(nextInt(), nextInt());
		}
		Point[] high = new Point[u];
		for (int i = 0; i < u; i++) {
			high[i] = new Point(nextInt(), nextInt());
		}
		int[] events = getEvents(low, high);
		double area = 0;
		int a = 0, b = 0;
		for (int i = 0; i < events.length - 1; i++) {
			int x1 = events[i];
			int x2 = events[i + 1];
			if (low[a + 1].x < x2) {
				++a;
			}
			if (high[b + 1].x < x2) {
				++b;
			}
			double d1 = getY(high[b], high[b + 1], x1) - getY(low[a], low[a + 1], x1);
			double d2 = getY(high[b], high[b + 1], x2) - getY(low[a], low[a + 1], x2);
			area += (d1 + d2) * .5 * (x2 - x1);
		}
		double slice = area / guests;
		double cur = 0;
		// System.err.println("TEST");
		// System.err.println(area);
		ArrayList<Double> res = new ArrayList<Double>();
		// System.err.println(slice);
		a = 0;
		b = 0;
		for (int i = 0; i < events.length - 1; i++) {
			int x1 = events[i];
			int x2 = events[i + 1];
			if (low[a + 1].x < x2) {
				++a;
			}
			if (high[b + 1].x < x2) {
				++b;
			}
			double d1 = getY(high[b], high[b + 1], x1) - getY(low[a], low[a + 1], x1);
			double d2 = getY(high[b], high[b + 1], x2) - getY(low[a], low[a + 1], x2);
			// System.err.println(d1 + " " + d2 + " asf ");
			double ok = (d1 + d2) * .5 * (x2 - x1);
			// System.err.println(ok + " ok " + slice + " " + x1 + " " + x2);
			// System.err.println(x1 + " " + x2 + " -> " + ok + " " + d1 + " " +
			// d2);

			// System.err.println(cur);
			double x_1 = x1;

			while (cur + ok >= slice && res.size() < guests - 1) {
				double xx = getX(d1, d2, x2 - x_1, slice - cur) + x_1;
				// System.err.println("CUT AT " + xx);
				res.add(xx);
				// System.err.println("SLICE");
				x_1 = xx;
				d1 = getY(high[b], high[b + 1], x_1) - getY(low[a], low[a + 1], x_1);
				ok = (d1 + d2) * .5 * (x2 - x_1);
				cur = 0;
			}
			cur += ok;
		}
		if (Math.abs(cur - slice) >= 1e-6) {
			System.err.println("BAD " + cur + " " + slice);
		}
		out.println();
		for (double d : res) {
			out.println(d);
		}

	}